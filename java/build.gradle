buildscript {
    repositories {
        // required for buildlib
        mavenLocal()

        // required for license-gradle-plugin
        mavenCentral()
    }
    dependencies {
        // this is the medvision buildlib
        classpath 'com.medvision360.buildlib:buildlib:latest.integration'

        // plugin for updating the license headers
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.5.0'
    }
}

// The IDEA plugin picks up sourceCompatibility from the Java plugin so
// make sure the root project has a proper Java configuration.
apply plugin: 'medvision-java'

allprojects {
    // Gradle can generate IDEA project files.
    // Run 'gradle idea' and open the project file in IDEA.
    apply plugin: 'idea'

    idea.module.iml {
        whenMerged { module ->
            // split dependencies into module dependencies and jar dependencies
            def moduleDependencies = []
            module.dependencies.each { dependency ->
                if (dependency.class.simpleName == 'ModuleDependency') {
                    if (dependency.scope.equalsIgnoreCase("COMPILE")) {
                        moduleDependencies += dependency
                    }
                }
            }
    
            module.dependencies.removeAll(moduleDependencies)
            def jarDependencies = new LinkedHashSet(module.dependencies)
    
            module.dependencies.clear()
            module.dependencies.addAll(moduleDependencies)
            module.dependencies.addAll(jarDependencies)
        }
    }
}

subprojects {
    group = 'com.medvision360.medrecord'
    version = '2.0.0'

    // Change version based on the build location.
    // When build locally it adds '-SNAPSHOT' when build on Cloudbees it adds
    // the build number.
    apply plugin: 'medvision-version'

    // Use the MEDvision360 repos (cloudbees, repo.medvision360.org)
    apply plugin: 'medvision-repo'

    // Update the license header on all files
    // run 'gradle licenseFormatMain' to update the license headers
    apply plugin: 'license'

    license {
        header rootProject.file('LICENSE.tpl')
        ext {
            year = Calendar.getInstance().get(Calendar.YEAR)
        }
    }

    ext {
        // Version numbers of dependencies.
        version = [
                'commonsCli': '1.2',
                'commonsIo': '2.4',
                'commonsLang3': '3.1',
                'freemarker': '2.3.20',
                'guava': '15.0',
                'junit': '4.11',
                'logback': '1.0.13',
                'openEhr': '1.0.5-SNAPSHOT',
                'slf4j': '1.7.5',
                'basex': '7.7.2',
                'jdom': '2.0.2',
                'jaxen': '1.1.4',
                'jackson': '2.2.3',
                'archetypes': '2.0.0',
                'spring': '3.2.4.RELEASE'
        ]
    }

}

// build vendor stuff
task vendor(type: Exec) {
    workingDir 'medrecord-vendor'
    commandLine 'mvn', 'install', '-B', '-Dmaven.test.skip=true'
}
