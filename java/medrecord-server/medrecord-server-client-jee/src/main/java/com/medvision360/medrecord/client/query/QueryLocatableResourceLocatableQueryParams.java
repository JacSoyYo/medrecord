// WARNING, THIS FILE IS AUTOMATICALLY GENERATED
// DO NOT MODIFY !

package com.medvision360.medrecord.client.query;

import java.util.ArrayList;
import java.util.List;

import org.restlet.resource.ClientResource;

import com.medvision360.lib.client.MethodParameterBase;

/**
 * Class for adding query parameters to the request.
 *
 * <p>This class holds the query parameters used when making requests using the
 * {@link QueryLocatableResource#locatableQuery(QueryLocatableResourceLocatableQueryParams) locatableQuery()} method of the <code>QueryLocatableResource</code>
 * class.
 */
public class QueryLocatableResourceLocatableQueryParams extends MethodParameterBase
{
    /**
     * Gets the value of the <code>ehr</code> query parameter.
     *
     * <p>The default value for the query parameter is <code>null</code>
     * meaning the parameter will not be included in the request.</p>
     *
     * <p><b>Description:</b> <i>An OpenEHR HierObjectID value specifying an EHR to search. Specify multiple times to searchmultiple EHRs, or do not specify to search all EHRs.</i></p>
     *
     * @return The value of the <code>ehr</code> query parameter
     *   or <code>null</code> when the query parameter is not set.
     */
    public String getEhr()
    {
        return getQueryArgument("ehr");
    }

    /**
     * Sets the <code>ehr</code> query parameter.
     *
     * <p><b>Description:</b> <i>An OpenEHR HierObjectID value specifying an EHR to search. Specify multiple times to searchmultiple EHRs, or do not specify to search all EHRs.</i></p>
     *
     *
     * @param value The new value for the <code>ehr</code> query
     *   parameter. Use <code>null</code> (which also is the default value)
     *   to make sure the parameter is not added to the request.
     */
    public void setEhr(final String value)
    {
        setQueryArgument("ehr", value);
    }

    /**
     * Gets the value of the <code>rmOriginator</code> query parameter.
     *
     * <p>The default value for the query parameter is <code>null</code>
     * meaning the parameter will not be included in the request.</p>
     *
     * <p><b>Description:</b> <i>A string specifying a reference model originator (such as "openEHR") toconstrain results to. The provided parameter is compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple rm originators, or do not specify to not constrain the results at all.</i></p>
     *
     * @return The value of the <code>rmOriginator</code> query parameter
     *   or <code>null</code> when the query parameter is not set.
     */
    public String getRmOriginator()
    {
        return getQueryArgument("rmOriginator");
    }

    /**
     * Sets the <code>rmOriginator</code> query parameter.
     *
     * <p><b>Description:</b> <i>A string specifying a reference model originator (such as "openEHR") toconstrain results to. The provided parameter is compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple rm originators, or do not specify to not constrain the results at all.</i></p>
     *
     *
     * @param value The new value for the <code>rmOriginator</code> query
     *   parameter. Use <code>null</code> (which also is the default value)
     *   to make sure the parameter is not added to the request.
     */
    public void setRmOriginator(final String value)
    {
        setQueryArgument("rmOriginator", value);
    }

    /**
     * Gets the value of the <code>rmName</code> query parameter.
     *
     * <p>The default value for the query parameter is <code>null</code>
     * meaning the parameter will not be included in the request.</p>
     *
     * <p><b>Description:</b> <i>A string specifying a reference model name (such as "EHR" or "DEMOGRAPHIC") toconstrain results to. The provided parameter is compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple rm names, or do not specify to not constrain the results at all.</i></p>
     *
     * @return The value of the <code>rmName</code> query parameter
     *   or <code>null</code> when the query parameter is not set.
     */
    public String getRmName()
    {
        return getQueryArgument("rmName");
    }

    /**
     * Sets the <code>rmName</code> query parameter.
     *
     * <p><b>Description:</b> <i>A string specifying a reference model name (such as "EHR" or "DEMOGRAPHIC") toconstrain results to. The provided parameter is compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple rm names, or do not specify to not constrain the results at all.</i></p>
     *
     *
     * @param value The new value for the <code>rmName</code> query
     *   parameter. Use <code>null</code> (which also is the default value)
     *   to make sure the parameter is not added to the request.
     */
    public void setRmName(final String value)
    {
        setQueryArgument("rmName", value);
    }

    /**
     * Gets the value of the <code>conceptName</code> query parameter.
     *
     * <p>The default value for the query parameter is <code>null</code>
     * meaning the parameter will not be included in the request.</p>
     *
     * <p><b>Description:</b> <i>A string specifying a reference model concept (such as "lab_test","medication" or "person) to constrain results to. The provided parameter is compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple rm concepts, or do not specify to not constrain the results at all.</i></p>
     *
     * @return The value of the <code>conceptName</code> query parameter
     *   or <code>null</code> when the query parameter is not set.
     */
    public String getConceptName()
    {
        return getQueryArgument("conceptName");
    }

    /**
     * Sets the <code>conceptName</code> query parameter.
     *
     * <p><b>Description:</b> <i>A string specifying a reference model concept (such as "lab_test","medication" or "person) to constrain results to. The provided parameter is compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple rm concepts, or do not specify to not constrain the results at all.</i></p>
     *
     *
     * @param value The new value for the <code>conceptName</code> query
     *   parameter. Use <code>null</code> (which also is the default value)
     *   to make sure the parameter is not added to the request.
     */
    public void setConceptName(final String value)
    {
        setQueryArgument("conceptName", value);
    }

    /**
     * Gets the value of the <code>archetype</code> query parameter.
     *
     * <p>The default value for the query parameter is <code>null</code>
     * meaning the parameter will not be included in the request.</p>
     *
     * <p><b>Description:</b> <i>A string specifying an archetype name to constrain results to. The provided parameteris compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple archetypes, or do not specify to not constrain the results at all.</i></p>
     *
     * @return The value of the <code>archetype</code> query parameter
     *   or <code>null</code> when the query parameter is not set.
     */
    public String getArchetype()
    {
        return getQueryArgument("archetype");
    }

    /**
     * Sets the <code>archetype</code> query parameter.
     *
     * <p><b>Description:</b> <i>A string specifying an archetype name to constrain results to. The provided parameteris compared against the archetype ID of the locatable and any nested locatable contents. Specify multiple times to allow multiple archetypes, or do not specify to not constrain the results at all.</i></p>
     *
     *
     * @param value The new value for the <code>archetype</code> query
     *   parameter. Use <code>null</code> (which also is the default value)
     *   to make sure the parameter is not added to the request.
     */
    public void setArchetype(final String value)
    {
        setQueryArgument("archetype", value);
    }

    /**
     * Gets the value of the <code>archetypeQ</code> query parameter.
     *
     * <p>The default value for the query parameter is <code>null</code>
     * meaning the parameter will not be included in the request.</p>
     *
     * <p><b>Description:</b> <i>A regular expression qualifying archetype names to constrain results to.The provided parameter is compared against the archetype ID of the locatable.</i></p>
     *
     * @return The value of the <code>archetypeQ</code> query parameter
     *   or <code>null</code> when the query parameter is not set.
     */
    public String getArchetypeQ()
    {
        return getQueryArgument("archetypeQ");
    }

    /**
     * Sets the <code>archetypeQ</code> query parameter.
     *
     * <p><b>Description:</b> <i>A regular expression qualifying archetype names to constrain results to.The provided parameter is compared against the archetype ID of the locatable.</i></p>
     *
     *
     * @param value The new value for the <code>archetypeQ</code> query
     *   parameter. Use <code>null</code> (which also is the default value)
     *   to make sure the parameter is not added to the request.
     */
    public void setArchetypeQ(final String value)
    {
        setQueryArgument("archetypeQ", value);
    }

}
