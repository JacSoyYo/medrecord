// WARNING, THIS FILE IS AUTOMATICALLY GENERATED
// DO NOT MODIFY !

package com.medvision360.medrecord.client.test;

import org.restlet.Client;
import org.restlet.data.Language;
import org.restlet.data.Preference;
import org.restlet.resource.ClientResource;
import org.restlet.resource.ResourceException;

import com.medvision360.lib.client.ClientResourceBase;
import com.medvision360.lib.client.ClientResourceConfig;
import com.medvision360.lib.client.ErrorDocument;
import com.medvision360.lib.common.exceptions.AnnotatedResourceException;
import com.medvision360.lib.common.exceptions.ApiException;

/**
    @apipath /test/clear
 @apiqueryparam confirm Set to the value "CONFIRM" to confirm you wish to do this.
   [type=string,required,single,default=false]

 */
public class TestClearResource extends ClientResourceBase
{
    /**
     * Constructor.
     *
     * <p>This constructor can be used to create a new client for this resource.</p>
     *
     * @param config_ Configuration object containing the location of the server
     *   this resource sends requests to.
     */
    public TestClearResource(
        final ClientResourceConfig config_
    )
    {
        super(config_, "/test/clear");
    }

    /**
       Clear all databases.

Empty out the server databases completely, removing all locatables,  all archetypes, all EHRs,
and any other stored data. This is a <strong>very</strong> destructive method intended for use with
(unit) testing only.



       <p>
       Use the {@link #clear(TestClearResourceClearParams)}
       method to pass additional query arguments.</p>


       

     */
    public void clear(
    ) throws
        com.medvision360.medrecord.api.exceptions.RecordException
    {
      clear(
        null
      );
    }

    /**
       Clear all databases.

Empty out the server databases completely, removing all locatables,  all archetypes, all EHRs,
and any other stored data. This is a <strong>very</strong> destructive method intended for use with
(unit) testing only.



       @param queryParams_ The query parameters to be added to the request.

       
     */
    public void clear(
        final TestClearResourceClearParams queryParams_
    ) throws
        com.medvision360.medrecord.api.exceptions.RecordException
    {
        final ClientResource resource_ = getClientResource();
        try
        {
            if (queryParams_ != null)
            {
                queryParams_.applyTo(resource_);
            }

            final com.medvision360.medrecord.api.test.TestClearResource wrapped_ = resource_.wrap(com.medvision360.medrecord.api.test.TestClearResource.class);
            wrapped_.clear(
            );

            handleCookies(resource_);

            
        }
        catch(final ResourceException e_)
        {
            final ErrorDocument errorDocument_ = ErrorDocument.getFrom(resource_);
            if (errorDocument_ != null)
            {
                switch(errorDocument_.getCode())
                {
                    case "RECORD_EXCEPTION":
                        throw new com.medvision360.medrecord.api.exceptions.RecordException(errorDocument_.getArguments());
                }
            }
            throw e_;
        }
    }

}
