buildscript {
  repositories {
    maven {
      url "http://jcenter.bintray.com/"
    }
  }
  dependencies {
    classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
  }
}

apply plugin: 'war'
apply plugin: 'tomcat'

import org.apache.tools.ant.filters.ReplaceTokens

configurations {
  all*.exclude group:'commons-logging', module:'commons-logging'
}

dependencies {
  compile(project(":medrecord-engine")) {
    exclude group:'commons-logging', module:'commons-logging'
  }

  compile group: 'com.google.code.gson', name: 'gson', version:"${ext.version.gson}"
  compile group: 'com.medvision360.wslog', name: 'wslog', version:"${ext.version.wslog}"
  providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:"${ext.version.servlet}"
  providedCompile group: 'javax.servlet', name: 'jstl', version:"${ext.version.jstl}"
  compile("org.springframework:spring-context:${ext.version.spring}") {
    exclude group:'commons-logging', module:'commons-logging'
  }
  compile("org.springframework:spring-web:${ext.version.spring}") {
    exclude group:'commons-logging', module:'commons-logging'
  }
  compile("org.springframework:spring-webmvc:${ext.version.spring}") {
    exclude group:'commons-logging', module:'commons-logging'
  }
  compile "ch.qos.logback:logback-classic:${ext.version.logback}"
  compile group: 'org.slf4j', name: 'slf4j-api', version:"${ext.version.slf4j}"
  compile group: 'org.slf4j', name: 'log4j-over-slf4j', version:"${ext.version.slf4j}"
  compile group: 'org.slf4j', name: 'jul-to-slf4j', version:"${ext.version.slf4j}"
  compile group: 'org.slf4j', name: 'jcl-over-slf4j', version:"${ext.version.slf4j}"
  testCompile group: 'junit', name: 'junit', version:'4.11'

  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${ext.version.tomcat}",
         "org.apache.tomcat.embed:tomcat-embed-logging-juli:${ext.version.tomcat}",
         "javax.servlet:jstl:1.2"
  tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${ext.version.tomcat}") {
      exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
  }
}

processResources {
  filter(ReplaceTokens, tokens: [
      "project.version": project.property("version"),
      "log.level":       project.property("log.level"),
      "log.appender":    project.property("log.appender"),
      "jul.log.level":   project.property("jul.log.level")
  ])
}

war {
  archiveName project.property("web.name") + ".war"
  filter(ReplaceTokens, tokens: [
      "project.version": project.property("version"),
      "log.level":       project.property("log.level"),
      "log.appender":    project.property("log.appender"),
      "jul.log.level":   project.property("jul.log.level")
  ])
}
